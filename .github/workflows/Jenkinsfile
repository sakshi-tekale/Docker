pipeline {
    agent any  // Ensure that we can use any available agent
    
    environment {
        DOCKER_IMAGE = "library-system:latest"
        DOCKER_REGISTRY = "your_docker_registry" // Optional: Set your Docker registry if needed
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-credentials') // Optional: If using private registry
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo "Checking out code from GitHub..."
                git branch: 'main', url: 'https://github.com/sample/library-system.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image..."
                    // Make sure Docker is installed on the agent or use Docker-in-Docker
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Run Unit Tests') {
            steps {
                script {
                    echo "Running unit tests inside the Docker container..."
                    // Make sure pytest is correctly set up in your image
                    sh 'docker run --rm $DOCKER_IMAGE pytest tests/'
                }
            }
        }

        stage('Deploy (Optional)') {
            steps {
                echo "Deploying application... (Define actual steps here)"
                // Add deployment commands here (e.g., push image to Docker Hub, deploy to cloud)
                // Example: sh 'docker push $DOCKER_IMAGE'
            }
        }
    }

    post {
        always {
            echo "Pipeline execution completed."
        }
        success {
            echo "Pipeline executed successfully!"
        }
        failure {
            echo "Pipeline failed. Check logs."
        }
    }
}
